version: '2'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - ecommerce-network

  kafka:
    image: confluentinc/cp-kafka:5.0.0
    networks:
      - ecommerce-network
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper

  postgresdb:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    ports:
      - '5432:5432'
    networks:
      - ecommerce-network
    volumes:
      - ./PostgreSQL/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./PostgreSQL/postgresql_data:/var/lib/postgresql/data

  cassandra:
    image: cassandra:4.1.3-jammy
    container_name: cassandra
    ports:
      - "9042:9042"
    volumes:
      - ./Cassandra/init.cql:/docker-entrypoint-initdb.d/init.cql
      - ./Cassandra/cassandra_data:/var/lib/cassandra
    environment:
      - MAX_HEAP_SIZE=512M
      - HEAP_NEWSIZE=100M
    restart: always
    networks:
      - ecommerce-network
    depends_on:
      - kafka

  redis:
    image: redis:6.2.14
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - ecommerce-network
    command: redis-server --databases 1

  #celery_worker:
  #  build: 
  #    context: .
  #    dockerfile: ProductLoader/Dockerfile
  #  container_name: celery_worker
  #  depends_on:
  #    - redis
  #    - influxdb
  #    - postgresdb
  #  environment:
  #    - REDIS_HOST=redis
  #    - INFLUXDB_HOST=influxdb
  #    - POSTGRESQL_HOST=postgresdb
  #  command: celery -A etl_tasks worker --loglevel=info
  #  networks:
  #    - ecommerce-network

networks:
  ecommerce-network:
    name: ecommerce-network
